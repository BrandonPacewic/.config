local M = {}

function M.setup()
    local status_ok, alpha = pcall(require, "alpha")
    if not status_ok then
        return
    end

    local dashboard = require "alpha.themes.dashboard"
    local function header()
        return {
            [[      ,:: :::::::                                                     ]],
            [[    , ;::;::::::                                                      ]],
            [[   .: :::::::::                                                       ]],
            [[  :::::::::::::                                                       ]],
            [[  ::::::::::::: ,.::::                                                ]],
            [[ . ::::::::::::                                               ,..::"""]],
            [[,:.::::::::::::                                             ..;:::"'  ]],
            [[::::::::::::::;                                           :;::::"     ]],
            [[ ::::::::::::::                                          ,:::::       ]],
            [[ ::::::::::::::;                                        ;:;::"        ]],
            [[,':::::::::::::::                                     .;:;::"         ]],
            [[;;':::::::::::::;.                                  ,;:::::'          ]],
            [[':;':::::::::::::;                                 ;:::::::           ]],
            [[ ::;;:::::::::::::;;                             ,;:::::::'           ]],
            [[ '::::::::::::::::::..                          ::::::::::            ]],
            [[  '":::::::::::::::::;.                        ;;::::::::'            ]],
            [[ :::;:::::::::::::::::::.                   ,;:::::::::::             ]],
            [[  :::;::::::::::::::::::::                  ;::::::::::::             ]],
            [[ ::'::::::::::::::::::::::;.               ::::::::::::::             ]],
            [[ ;:;'::::::::::::::::::::::;              ,:::::::::::::;             ]],
            [[ "::;;::::::::::::::::::::::;             ;::::::::::::::             ]],
            [[ ;'::::::::::::::::::::::::::.           ,::;:::::::::::::            ]],
            [[::;;::::::::::::::::::::::::::           ;:::::::::::::::;            ]],
            [[ :::::::::::::::::::::::::::::          ::::::::::::::::::            ]],
            [[:::::::::::::::::::::::::::::           ;::::::::::::::::'            ]],
            [[::::::::::::::::::::::::::::'          ::;::::::::::::::              ]],
            [[ :::::::::::::::::::::::::::        ,..;::::::::::::::"               ]],
            [[ :::::::::::::::::::::::::::        ::""""::;:::::::"                 ]],
            [[ :::::::::::::::::::::::::::.    ,.;.;::' ;"""""""":.;....            ]],
            [[  :::::::::::::::::::::::::::;..::::::::,."           ''::;.          ]],
            [[  ':::::::::::::::::::::::::::::::::::::'".:          ''.;::;.        ]],
            [[   '"::::::::::::::::::::::::::::::::::;.:              ::""'";;      ]],
            [[    ..::::::::::::::::::::::::::::::::::::;.            ......;:.     ]],
            [[     "":::::::::::::::::::::::::::::::::. ::    ;;:""":;.:;.  ::'     ]],
            [[       ':::::::::::::::::::::::::::::::::::'" ;:"'      """:::        ]],
            [[        '::::::::::::::::::::::::::::::::::..::                       ]],
            [[           '"""""::::::::::::::::::::::::::::"                        ]],
            [[                '"":::::::::::::::::::::::::                          ]],
            [[               ..;::::::::::::::::::::::::::                          ]],
            [[        .....;:::::::::::::::::::::::::::"":...                       ]],
            [[     ..::::::"":::::::::::::::::::::'"":,;.;"::                       ]],
            [[ ..;:::"""'   ;;:":::::::::::::::::""'.;:::; ''                       ]],
            [[ :::"'      ;;"",:::::::::::::::::":;.;::::::              ,...       ]],
            [[ "::.   ,.;'"...::::::::::::::"""":;::'::::::;         ,  ;::::..     ]],
            [[  '':...'"  ;::';::::::::;:":" ;;;:::;;;:;::::;       ;:::::"":::     ]],
            [[   ':"' ,..::'.;:::::"::"::;'  :"":::::::::::::;.....;:.;':   '"'     ]],
            [[    ':..;:"' ::::".;  ;' ;::   '' '":::::::::::":::::::::;;:          ]],
            [[      ":;  ,;""",;"'.;: ;";:        '"""":::""   ,::::::::::          ]],
            [[       '"::::.;::" ;:: ;;;:'                     :::"  ""';'          ]],
            [[           :::::;;.:';;":"'                     ':::                  ]],
            [[                '""""'                           '"""'                ]],
        }
    end

    dashboard.section.header.val = header()

    dashboard.section.buttons.val = {}

    local function footer()
        return "He who can destroy a thing, is the one who has the real control of it."
    end

    dashboard.section.footer.val = footer()

    dashboard.section.footer.opts.hl = "Constant"
    dashboard.section.header.opts.hl = "Include"
    dashboard.section.buttons.opts.hl = "Function"
    dashboard.section.buttons.opts.hl_shortcut = "Type"
    dashboard.opts.opts.noautocmd = true

    alpha.setup(dashboard.opts)
end

return M
